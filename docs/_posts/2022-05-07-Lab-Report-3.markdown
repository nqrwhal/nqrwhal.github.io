---
layout: post
title:  "Lab Report 3: SSH Aliasing"
date:   2022-05-07 16:00:00 -0700
categories: Lab-Report 
---

### SSH Aliasing

This week we learned how to set an alias for an SSH connection, simplifying the connection process. In order to set up an alias, you first navigate to the config file in the .ssh folder. 
The format for alias entries in the config file is: 

``` 
Host [Alias Name]
    Hostname [Hostname here]
    User [Username here]
```

Here's what my config file looks like:

![hosts](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/host.jpg?raw=true)


This is what connecting via ssh alias looks like:

![alias](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/ssh.jpg?raw=true)


Using SCP to transfer files with alias:

![scp](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/scp.jpg?raw=true)


### SSH with Github

You can use SSH keys to authenticate while pushing changes to Github.
Github has a panel where you can manage all SSH keys for your account, adding or deleting them.

![panel](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/ghkeys.jpg?raw=true)

Once you have added your SSH public key, which you can find here:

![public](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/keylocation.jpg?raw=true)


You should then be able to connect to Github. You can try running the command ```ssh -T git@github.com```, and you will receive the following message if you are able to connect.

![sshpush](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/gitactions.jpg?raw=true)




Here's the [link](https://github.com/nqrwhal/skill1/commit/3d607e0f7b66d218b8d5a65b3b134ce90be2cd5a) to the commit.

### Using SCP -r to copy entire repositories


You can use the ```-r``` flag on your commands, meaning recursive, to apply the command to every file in a folder.

Here, I will use ```scp -r ``` to copy the contents of an entire folder from my local computer to the server.