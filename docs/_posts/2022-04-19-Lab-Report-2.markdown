---
layout: post
title:  "Lab Report 2: Troubleshooting Code Collaboratively"
date:   2022-04-19 16:00:00 -0700
categories: Lab-Report 
---
There's no way to avoid it. Professionally, you *will* have to work with others, and it's best to learn how to do so early on.

Here is the code my group was given at the beginning of the assignment:
<script src="https://gist.github.com/nqrwhal/14b196f73020ba24b987d15c64861cfa.js"></script>

From the first impression, we could already tell that this implementation of the code would be susceptible to various errors, bugs, and edge cases. The goal of the program is to parse any valid links from a markdown file and return them via console output. However, because of the way in which the program determined what was a URL and what wasn't, it resulted in plenty of bugs. A simple rewrite I did implemented a slightly more reliable system to check the file line by line.

Here is an example of a file that would have caused a fatal error in the previous code, but passes without fail in my revision:
<script src="https://gist.github.com/nqrwhal/a7d5ff070e4cab86f569ac448ea6582d.js"></script>


Comparing the rewritten code to the original code, it is clear that my first rewrite handled several of the problems.
<script src="https://gist.github.com/nqrwhal/16a3d7eb1ca15eda9cb4886512dcc8d3.js"></script>
A simple look at the BLAME will highlight the biggest differences:
![blame1](https://raw.githubusercontent.com/nqrwhal/nqrwhal.github.io/master/docs/blame1.jpg)
[s](ass)