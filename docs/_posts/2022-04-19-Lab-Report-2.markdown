---
layout: post
title:  "Lab Report 2: Troubleshooting Code Collaboratively"
date:   2022-04-19 16:00:00 -0700
categories: Lab-Report 
---
There's no way to avoid it. Professionally, you *will* have to work with others, and it's best to learn how to do so early on.

### Original Code (Revision 1):
Here is the code my group was given at the beginning of the assignment:
<script src="https://gist.github.com/nqrwhal/14b196f73020ba24b987d15c64861cfa.js"></script>

The goal of the function is to correctly print a list of all valid links that would be rendered in markdown code. Running a simple test markdown file with a single link through it proves to be no problem:

![res1](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/result1.jpg?raw=true)

However, when the markdown file contains an empty line at the end of the file, like so:
<script src="https://gist.github.com/nqrwhal/a7d5ff070e4cab86f569ac448ea6582d.js"></script>

We run into heap space errors due to an infinite loop. The empty line when running the code gives us a clue, and we can also check system resource utilization to see.

![heap1](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/docs/img5.jpg?raw=true)
![loop](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/infiniteloop.jpg?raw=true)

The bug in this case, is specifically because of the empty lines. Because the code is written improperly with loops, the program enters an infinite loop and eventually the machine runs out of memory and the program crashes.
### Revision 2:
I rewrote the code to return the file contents as an ArrayList composed of each line of the file. It will deal with empty lines properly without a crash. 
<script src="https://gist.github.com/nqrwhal/16a3d7eb1ca15eda9cb4886512dcc8d3.js"></script>

Here are the code differences: 
## Blame from rev 1 to rev 2:
![blame1](https://raw.githubusercontent.com/nqrwhal/nqrwhal.github.io/master/docs/blame1.jpg)

Now that I had dealt with the first identified bug, I was now ready to tackle the bigger problem, detecting only correct links.
While the code I had written worked with empty lines, lines with spacing between the [] and () in the markdown file would still be recognized as valid links, and only the first link in a line would be printed. An example of a file that would produce a bug in my code would be the following (Make sure to click 'view raw' in the embed to see what the formatting looks like in pure markdown): 
<script src="https://gist.github.com/nqrwhal/3cd18b537acc355ceb1313f9b34c6f81.js"></script>

The output symptoms look like so:
![result2](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/result2.jpg?raw=true)

We can see that the output only prints the content within the first pair of parentheses following brackets per line, and ignores the other lines. This is not the ideal behaviour of the program.
### Revision 3:
After a considerable amount of consideration and testing, the following is the perfected code which can detect all of the bugs that had previously plagued the earlier code. It can parse multiple URLs per line, as well as detect, handle, and subsequently ignore malformed markdown links.
## Blame from rev 2 to final rev:
![blame1](https://raw.githubusercontent.com/nqrwhal/nqrwhal.github.io/master/docs/blame1.jpg)

Here is the code. I am quite proud of this solution:
<script src="https://gist.github.com/nqrwhal/7aaa31fcbda4f57c6fc7a49f204d63ca.js"></script>

Running the new code with the previous buggy markdown file returns the correct links:
![result3](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/result3.jpg?raw=true)

With the new and vastly improved error handling and accounting for edge cases, the new and updated code handles this with ease. Whereas running the older code with this file would produce malformed links, as well as false positives, this new code performs as it should.
### Overlooked Bug? (Revision 4):

My hubris caused my to overlook the most glaring bug: I forgot to account for running the program with no additional arguments. This caused the following error output:

![indexbug](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/lastbug.jpg?raw=true)

To fix this, I adjusted the code and committed the final changes.
The final form of the code: 
<script src="https://gist.github.com/nqrwhal/0e3f0d9386dd3b7f456022860fc77802.js"></script>

The blame of the code changes:
![blame](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/lastblame.jpg?raw=true)

With this change, my code is now bulletproof.