---
layout: post
title:  "Lab Report 4: Markdown Parse Shenanigans"
date:   2022-05-21 16:00:00 -0700
categories: Lab-Report 
---

### Markdown Parser

For this lab report, we were tasked with testing our own implementations of the markdown parser against a specific implementation we used in a lab. There are three snippets of code supplied, and we run each snippet through both implementations for six total tests.

This is the implementation I wrote: [myParse](https://github.com/nqrwhal/markdown-parser)

This is the implementation we reviewed: [exampleParse](https://github.com/canitry/markdown-parser)


### First Snippet
``` 
`[a link`](url.com)

[another link](`google.com)`

[`cod[e`](google.com)

[`code]`](ucsd.edu) 
```

### Second Snippet

```
[a [nested link](a.com)](b.com)

[a nested parenthesized url](a.com(()))

[some escaped \[ brackets \]](example.com)
```

### Third Snippet
```
[this title text is really long and takes up more than 
one line

and has some line breaks](
    https://www.twitter.com
)

[this title text is really long and takes up more than 
one line](
https://sites.google.com/eng.ucsd.edu/cse-15l-spring-2022/schedule
)


[this link doesn't have a closing parenthesis](github.com

And there's still some more text after that.

[this link doesn't have a closing parenthesis for a while](https://cse.ucsd.edu/



)

And then there's more text
```

### The tests:
Here are the tests for my implementation:
![mtest](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/mtest.jpg?raw=true)


Here are the tests for the example:
![extest]()


### The results:
This is the my implementation and the first snippet:

![mine1](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/mine1.jpg?raw=true)

The expected results were obtained after running the test. Only correctly formatted links were returned.
Second snippet:

![mine2](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/mine2.jpg?raw=true)

For this snippet, we expected all three links to be rendered, but my implementation only correctly returned the first one. The second one was improperly parsed, and the third one ignored due to the escaped brackets.

Third Snippet:

![mine3](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/mine3.jpg?raw=true)

For the third snippet, only the schedule link should be returned. However, my implementation uses a line by line approach that fails in parsing the link properly.

Example Implementation 1st snippet: 

![ex1](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/ex1.jpg?raw=true)

In this implementation, the code incorrectly returns ucsd.edu as a link, when it is not rendered in markdown.


Second snippet:

![ex2](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/ex2.jpg?raw=true)

This implementation returns b.com when it should not, but it also catches example.com. 


Third snippet:

![ex3](https://github.com/nqrwhal/nqrwhal.github.io/blob/master/imgs/ex3.jpg?raw=true)

This implementation incorrectly returns two additional that should not be returned, because they are not rendered as valid links in markdown.

### Questions

# 1

It would be possible to change my implementation of MarkdownParse to handle backticks, but I'm not sure it would be possible to do in ten lines of code. Because of the nature of how my code functions, there are a significant amount of small changes I need to make throughout my code to account for backticks.

# 2

Again, this would be possible to change but not within ten lines of code. I would need to implenent counting the number of parentheses and brackets into the code, and also accounting for backticks escaping any of these characters. If implemented together with the code block change, it could potentially be easier to write.

# 3

It would be possible to implement this code, potentially even by removing a significant amount of code from my code. Because I use a line by line parsing method of the markdown file, I had solved some issues with infinite loops. However, with a few simple checks this could be avoided. My code would be able to work with linebreaks in the parentheses and brackets.